# MongoDB
spring.data.mongodb.uri=mongodb://localhost:27017/desafio

# Kafka (consumer)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=writer-group
spring.kafka.consumer.auto-offset-reset=earliest

# Deserializers
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# JSON (ignorar headers e forçar o tipo)
spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.desafio.*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=br.com.desafio.apiservice.application.dto.IdadeCalculadaDto

# Listener não falha se o tópico não existir ainda
spring.kafka.listener.missing-topics-fatal=false

# Tópico consumido
kafka.topic.name=Q_PROC_FIM

# Aplicação non-web
spring.main.web-application-type=none

# Logs úteis
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.apache.kafka.clients.consumer.KafkaConsumer=INFO
logging.level.org.springframework.kafka.listener=INFO
